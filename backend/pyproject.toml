[project]
name = "sol"
version = "0.1.0"
description = "Sol PyPI Index Server - A PEP-compliant Python package repository"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Sol Team", email = "info@example.com"}
]
dependencies = [
    "aiobotocore>=2.21.1",
    "asyncpg>=0.30.0",
    "cachetools>=5.5.2",
    "fastapi>=0.115.12",
    "httpx>=0.28.1",
    "pyjwt==2.10.1",
    "prometheus-client>=0.21.1",
    "pydantic>=2.11.2",
    "pydantic-settings>=2.8.1",
    "python-dotenv>=1.1.0",
    "python-multipart>=0.0.20",
    "starlette>=0.46.1",
    "uvicorn>=0.34.0",
    "valkey>=6.1.0",
]

[project.optional-dependencies]
dev = [
    "bandit>=1.7.8",
    "codespell>=2.2.6",
    "mypy>=1.9.0",
    "pre-commit>=3.7.0",
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.6",
    "pytest-cov>=5.0.0",
    "ruff>=0.3.4",
]


[tool.ruff]
target-version = "py313"
line-length = 88
lint.select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "I",    # isort
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
    "S",    # flake8-bandits
    "FAST", # fastapi
    "TRY",  # tryceratops
]
lint.ignore = [
    "D203",  # one-blank-line-before-class (incompatible with D211)
    "D212",  # multi-line-summary-first-line (incompatible with D213)
    "E501",  # line-too-long (handled by formatter)
    "B008",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["S"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.4",
]
