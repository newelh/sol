services:
  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - SERVER_DEBUG=true
      - LOG_LEVEL=DEBUG
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=pypi
      - S3_ENDPOINT_URL=http://minio:9000
      - S3_REGION_NAME=us-east-1
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_DEFAULT_BUCKET=pypi
      - VALKEY_HOST=valkey
      - VALKEY_PORT=6379
      - AUTH_AUTHORIZATION_URL=http://localhost:8000/auth
      - AUTH_TOKEN_URL=http://localhost:8000/token
      - AUTH_JWT_SECRET_KEY=supersecretkey
      - AUTH_TOKEN_EXPIRE_MINUTES=60
    volumes:
      - ../backend:/app
    depends_on:
      - postgres
      - minio
      - valkey
    command: ["python", "-m", "uvicorn", "app.api.app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pypi
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data

  valkey:
    image: valkey/valkey:latest
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data

  # MinIO setup service that creates the bucket
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/pypi --ignore-existing;
      /usr/bin/mc policy set public myminio/pypi;
      exit 0;
      "

volumes:
  postgres_data:
  minio_data:
  valkey_data:
